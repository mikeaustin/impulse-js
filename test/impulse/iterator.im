class Iterator {
  constructor(range) {
    this._range = range;
    this._value = this._range._begin;
    //this._done  = false;
  }
  
  function next() {
    this._value = this._value + 1;
    this._done  = this._value < this._range._end;

    return this;
  }
  
  function value() {
    return this._value;
  }
}

class Range {
  constructor(begin, end) {
    this._begin = begin - 1;
    this._end   = end;
  }

  function iterator() {
    var value = this._begin;
    
    return new Iterator(this);
  }
}

var iter = new Range(1, 3).iterator();

var iter = iter.next(); console.log(iter);
var iter = iter.next(); console.log(iter);
var iter = iter.next(); console.log(iter);

console.log("=====");

var iter1 = new Range(1, 3).iterator();
var iter2 = new Range(11, 3).iterator();

console.log([iter1, iter2].reduce((iters, iter) => iters.concat([iter.next()]), []));
console.log([iter1, iter2].reduce((iters, iter) => iters.concat([iter.next()]), []));
console.log([iter1, iter2].reduce((iters, iter) => iters.concat([iter.next()]), []));
